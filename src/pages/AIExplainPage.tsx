import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Brain, Search, FileText, MessageCircle, Lightbulb, Clock, Star, ArrowRight } from 'lucide-react';

const AIExplainPage: React.FC = () => {
  const [query, setQuery] = useState('');
  const [explanation, setExplanation] = useState('');
  const [isLoading, setIsLoading] = useState(false);

  const popularTopics = [
    { title: 'How does voting work in the UK?', category: 'Democracy', difficulty: 'Beginner' },
    { title: 'What is the House of Lords?', category: 'Parliament', difficulty: 'Intermediate' },
    { title: 'Understanding council tax', category: 'Local Government', difficulty: 'Beginner' },
    { title: 'How are laws made?', category: 'Legislation', difficulty: 'Intermediate' },
    { title: 'What is devolution?', category: 'Government', difficulty: 'Advanced' },
    { title: 'Understanding Brexit implications', category: 'Policy', difficulty: 'Advanced' }
  ];

  const recentExplanations = [
    { question: 'What is a constituency?', timestamp: '2 hours ago', rating: 4.8 },
    { question: 'How do I register to vote?', timestamp: '5 hours ago', rating: 4.9 },
    { question: 'What is the difference between MP and MEP?', timestamp: '1 day ago', rating: 4.7 },
    { question: 'How does the NHS work?', timestamp: '2 days ago', rating: 4.6 }
  ];

  const handleExplain = async () => {
    if (!query.trim()) return;
    
    setIsLoading(true);
    // Simulate AI processing
    setTimeout(() => {
      setExplanation(`Here's a simplified explanation of "${query}":\n\nThis is a mock explanation that would normally be generated by an AI system. In a real implementation, this would connect to an AI service that provides clear, accurate explanations of government and political concepts tailored to the user's level of understanding.\n\nKey points:\n• Point 1 about the topic\n• Point 2 with relevant details\n• Point 3 explaining the practical implications\n\nWould you like me to explain any specific aspect in more detail?`);
      setIsLoading(false);
    }, 2000);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8">
      <div className="container mx-auto px-4">
        <div className="text-center mb-8">
          <div className="flex items-center justify-center mb-4">
            <Brain className="h-12 w-12 text-blue-600 mr-3" />
            <h1 className="text-4xl font-bold text-gray-900">AI Explain</h1>
          </div>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Get clear, simple explanations of government processes, political concepts, and civic duties
          </p>
        </div>

        <div className="max-w-4xl mx-auto">
          {/* Main Query Section */}
          <Card className="mb-8">
            <CardHeader>
              <CardTitle className="flex items-center">
                <MessageCircle className="h-5 w-5 mr-2" />
                Ask Your Question
              </CardTitle>
              <CardDescription>
                Ask anything about UK government, politics, or civic processes
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <Textarea
                  placeholder="e.g., How does the UK electoral system work?"
                  value={query}
                  onChange={(e) => setQuery(e.target.value)}
                  className="min-h-[100px]"
                />
                <Button 
                  onClick={handleExplain} 
                  disabled={!query.trim() || isLoading}
                  className="w-full"
                >
                  {isLoading ? (
                    <>
                      <Clock className="h-4 w-4 mr-2 animate-spin" />
                      Generating Explanation...
                    </>
                  ) : (
                    <>
                      <Brain className="h-4 w-4 mr-2" />
                      Explain This
                    </>
                  )}
                </Button>
              </div>

              {explanation && (
                <div className="mt-6 p-4 bg-blue-50 rounded-lg border">
                  <h3 className="font-semibold text-blue-900 mb-2">AI Explanation:</h3>
                  <div className="text-gray-700 whitespace-pre-line">{explanation}</div>
                  <div className="flex items-center justify-between mt-4 pt-4 border-t">
                    <div className="flex items-center space-x-2">
                      <Button variant="outline" size="sm">
                        <Star className="h-4 w-4 mr-1" />
                        Rate
                      </Button>
                      <Button variant="outline" size="sm">
                        <FileText className="h-4 w-4 mr-1" />
                        Save
                      </Button>
                    </div>
                    <Button variant="outline" size="sm">
                      Ask Follow-up
                      <ArrowRight className="h-4 w-4 ml-1" />
                    </Button>
                  </div>
                </div>
              )}
            </CardContent>
          </Card>

          <Tabs defaultValue="popular" className="space-y-6">
            <TabsList className="grid w-full grid-cols-3">
              <TabsTrigger value="popular">Popular Topics</TabsTrigger>
              <TabsTrigger value="recent">Recent Explanations</TabsTrigger>
              <TabsTrigger value="categories">Browse Categories</TabsTrigger>
            </TabsList>

            <TabsContent value="popular">
              <div className="grid gap-4 md:grid-cols-2">
                {popularTopics.map((topic, index) => (
                  <Card key={index} className="cursor-pointer hover:shadow-md transition-shadow">
                    <CardContent className="p-4">
                      <div className="flex items-start justify-between mb-2">
                        <h3 className="font-semibold text-gray-900">{topic.title}</h3>
                        <Badge variant={topic.difficulty === 'Beginner' ? 'default' : topic.difficulty === 'Intermediate' ? 'secondary' : 'destructive'}>
                          {topic.difficulty}
                        </Badge>
                      </div>
                      <p className="text-sm text-gray-600 mb-3">{topic.category}</p>
                      <Button variant="outline" size="sm" className="w-full">
                        <Lightbulb className="h-4 w-4 mr-2" />
                        Get Explanation
                      </Button>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </TabsContent>

            <TabsContent value="recent">
              <div className="space-y-4">
                {recentExplanations.map((item, index) => (
                  <Card key={index} className="cursor-pointer hover:shadow-md transition-shadow">
                    <CardContent className="p-4">
                      <div className="flex items-center justify-between">
                        <div className="flex-1">
                          <h3 className="font-semibold text-gray-900 mb-1">{item.question}</h3>
                          <p className="text-sm text-gray-600">{item.timestamp}</p>
                        </div>
                        <div className="flex items-center space-x-2">
                          <div className="flex items-center">
                            <Star className="h-4 w-4 text-yellow-400 mr-1" />
                            <span className="text-sm font-medium">{item.rating}</span>
                          </div>
                          <Button variant="outline" size="sm">
                            View
                          </Button>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </TabsContent>

            <TabsContent value="categories">
              <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
                {[
                  { name: 'Democracy & Voting', icon: '🗳️', count: 45 },
                  { name: 'Parliament', icon: '🏛️', count: 38 },
                  { name: 'Local Government', icon: '🏢', count: 52 },
                  { name: 'Laws & Legislation', icon: '⚖️', count: 29 },
                  { name: 'Public Services', icon: '🏥', count: 41 },
                  { name: 'Rights & Responsibilities', icon: '📋', count: 33 }
                ].map((category, index) => (
                  <Card key={index} className="cursor-pointer hover:shadow-md transition-shadow">
                    <CardContent className="p-4 text-center">
                      <div className="text-3xl mb-2">{category.icon}</div>
                      <h3 className="font-semibold text-gray-900 mb-1">{category.name}</h3>
                      <p className="text-sm text-gray-600 mb-3">{category.count} explanations</p>
                      <Button variant="outline" size="sm" className="w-full">
                        Explore
                      </Button>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </TabsContent>
          </Tabs>
        </div>
      </div>
    </div>
  );
};

export default AIExplainPage;